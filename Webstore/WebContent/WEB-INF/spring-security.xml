<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/account"
			access="hasAnyRole('ROLE_USER', 'ROLE_EMPLOYEE', 'ROLE_ADMIN')" />
		<intercept-url pattern="/account/edit"
			access="hasAnyRole('ROLE_USER', 'ROLE_EMPLOYEE', 'ROLE_ADMIN')" />
		<intercept-url pattern="/employee"
			access="hasAnyRole('ROLE_EMPLOYEE', 'ROLE_ADMIN')" />
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/editUser" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/deleteUser" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/newUser" access="hasRole('ROLE_ADMIN')" />

	</http>

	<authentication-manager>


		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT login,haslo,1
		 						  FROM uzytkownicy 
		 						  WHERE login=?"
				authorities-by-username-query="SELECT uzytkownicy.login, role.nazwa 
		 								FROM uzytkownicy 
		 								INNER JOIN role 
		 								ON uzytkownicy.RolaID=role.ID 
		 								WHERE uzytkownicy.login=?"
				role-prefix="ROLE_" />

		</authentication-provider>
	</authentication-manager>

</beans:beans>